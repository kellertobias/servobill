# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AuthCheckResult {
  authenticated: Boolean!
  refreshable: Boolean!
  userName: String
}

type Customer {
  city: String
  contactName: String
  country: String
  createdAt: DateTime!
  customerNumber: String!
  email: String
  id: String!
  name: String!
  notes: String
  showContact: Boolean!
  state: String
  street: String
  updatedAt: DateTime!
  zip: String
}

input CustomerInput {
  city: String
  contactName: String
  country: String
  customerNumber: String
  email: String
  name: String!
  notes: String
  showContact: Boolean!
  state: String
  street: String
  zip: String
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Expense {
  createdAt: DateTime!
  description: String
  expendedAt: DateTime!
  expendedCents: Int!
  id: String!
  name: String!
  notes: String
  taxCents: Int
  updatedAt: DateTime!
}

input ExpenseInput {
  description: String
  expendedAt: DateTime!
  expendedCents: Int!
  name: String!
  notes: String
  taxCents: Int
}

input ExpenseWhereInput {
  search: String
  year: Int
}

type GetContextResult {
  contextString: String!
}

type IncomeSurplusReport {
  endDate: DateTime!
  expensesCents: Int!
  expensesTaxCents: Int!
  incomeCents: Int!
  invoiceTaxCents: Int!
  items: [IncomeSurplusReportItem!]!
  openCents: Int!
  openInvoices: Int!
  overdueCents: Int!
  overdueInvoices: Int!
  startDate: DateTime!
  surplusCents: Int!
}

type IncomeSurplusReportItem {
  name: String!
  surplusCents: Int!
  taxCents: Int!
  type: String!
  valutaDate: DateTime!
}

input IncomeSurplusReportWhereInput {
  endDate: DateTime!
  startDate: DateTime!
}

type Invoice {
  activity: [InvoiceActivity!]!
  contentHash: String
  createdAt: DateTime!
  customer: Customer!
  dueAt: DateTime
  footerText: String
  id: String!
  invoiceNumber: String
  invoicedAt: DateTime
  items: [InvoiceItem!]!
  links: InvoiceLinks
  offerNumber: String
  offeredAt: DateTime
  paidAt: DateTime
  paidCents: Int
  paidVia: String
  status: InvoiceStatus!
  subject: String
  submissions: [InvoiceSubmissions!]!
  totalCents: Int!
  totalTax: Int!
  type: InvoiceType!
  updatedAt: DateTime!
}

type InvoiceActivity {
  activityAt: DateTime!
  attachment: String
  id: String!
  notes: String
  type: InvoiceActivityType!
  user: String
}

"""Type of Activity Log entry"""
enum InvoiceActivityType {
  ARCHIVE_INVOICE
  ARCHIVE_OFFER
  CANCEL_INVOICE
  CANCEL_OFFER
  CONVERT_TO_INVOICE
  CREATED_INVOICE
  CREATED_OFFER
  EMAIL_BOUNCED
  EMAIL_SENT
  NOTE
  PAID
  PAYMENT
  SENT_INVOICE_EMAIL
  SENT_INVOICE_LETTER
  SENT_INVOICE_MANUALLY
  SENT_OFFER_EMAIL
  SENT_OFFER_LETTER
  SENT_OFFER_MANUALLY
  UPDATED
}

type InvoiceChangedResponse {
  activityId: String!
  change: InvoiceActivityType!
  id: String!
  updatedAt: DateTime!
}

input InvoiceInput {
  customerId: String!
  dueAt: DateTime
  footerText: String
  invoicedAt: DateTime
  items: [InvoiceItemInput!]!
  offeredAt: DateTime
  subject: String
}

type InvoiceItem {
  description: String
  id: String!
  name: String!
  priceCents: Int!
  productId: String
  quantity: Float!
  taxPercentage: Int!
}

input InvoiceItemInput {
  description: String
  name: String!
  priceCents: Int!
  productId: String
  quantity: Float!
  taxPercentage: Int!
}

type InvoiceLinks {
  invoiceId: String
  offerId: String
}

input InvoicePaymentInput {
  cents: Int!
  via: String!
  when: DateTime
}

"""Invoice status"""
enum InvoiceStatus {
  CANCELLED
  DRAFT
  PAID
  PAID_PARTIALLY
  SENT
}

input InvoiceSubmissionInput {
  sendType: InvoiceSubmissionType!
  when: DateTime
}

"""The way(s) the invoice was submitted"""
enum InvoiceSubmissionType {
  EMAIL
  LETTER
  MANUAL
}

type InvoiceSubmissions {
  id: String!
  submittedAt: DateTime!
  type: InvoiceSubmissionType!
}

input InvoiceTemplateInput {
  pdfStyles: String!
  pdfTemplate: String!
}

type InvoiceTemplateResult {
  pdfStyles: String!
  pdfTemplate: String!
}

"""Invoice or Offer"""
enum InvoiceType {
  INVOICE
  OFFER
}

input InvoiceWhereInput {
  search: String
  status: InvoiceStatus
  type: InvoiceType
  year: Int
}

type Mutation {
  copyInvoice(as: InvoiceType!, id: String!): InvoiceChangedResponse!
  createCustomer(data: CustomerInput!): Customer!
  createExpense(data: ExpenseInput!): Expense!
  createInvoice(customerId: String!, type: InvoiceType): Invoice!
  createProduct(data: ProductInput!): Product!
  deleteCustomer(id: String!): Customer!
  deleteExpense(id: String!): Expense!
  deleteProduct(id: String!): Product!
  invoiceAddComment(attachment: String, comment: String!, invoiceId: String!): InvoiceChangedResponse!
  invoiceAddPayment(id: String!, payment: InvoicePaymentInput!): InvoiceChangedResponse!
  invoiceCancelUnpaid(id: String!): InvoiceChangedResponse!
  invoiceDeleteDraft(id: String!): InvoiceChangedResponse!
  invoicePdf(id: String!): String
  invoiceSend(id: String!, submission: InvoiceSubmissionInput!): InvoiceChangedResponse!
  sendTestEvent(data: String!, name: String!): String!
  testRenderTemplate(pdf: Boolean, styles: String!, template: String!): String!
  updateCustomer(data: CustomerInput!, id: String!): Customer!
  updateExpense(data: ExpenseInput!, id: String!): Expense!
  updateInvoice(data: InvoiceInput!, id: String!): Invoice!
  updateProduct(data: ProductInput!, id: String!): Product!
  updateSettings(data: SettingsInput!): SettingsResult!
  updateTemplate(data: InvoiceTemplateInput!): InvoiceTemplateResult!
}

type Product {
  category: String!
  createdAt: DateTime!
  description: String
  id: String!
  name: String!
  notes: String
  priceCents: Int!
  taxPercentage: Int!
  unit: String
  updatedAt: DateTime!
}

input ProductInput {
  category: String!
  description: String
  name: String!
  notes: String
  priceCents: Int!
  taxPercentage: Int!
}

input ProductWhereInput {
  category: String
  search: String
}

type Query {
  customer(id: String!): Customer
  customers(limit: Int, skip: Int, where: String): [Customer!]!
  expense(id: String!): Expense!
  expenses(limit: Int, skip: Int, where: ExpenseWhereInput): [Expense!]!
  generateReport(where: IncomeSurplusReportWhereInput): IncomeSurplusReport!
  generateReportExport(where: IncomeSurplusReportWhereInput!): IncomeSurplusReport!
  getContext: GetContextResult!
  invoice(id: String!): Invoice!
  invoices(limit: Int, skip: Int, where: InvoiceWhereInput): [Invoice!]!
  loggedInUser: AuthCheckResult!
  product(id: String!): Product
  products(limit: Int, skip: Int, where: ProductWhereInput): [Product!]!
  settings: SettingsResult!
  template: InvoiceTemplateResult!
}

input SettingsCompanyInput {
  bankAccountHolder: String!
  bankBic: String!
  bankIban: String!
  city: String!
  email: String!
  name: String!
  phone: String!
  street: String!
  taxId: String!
  vatId: String!
  web: String!
  zip: String!
}

input SettingsInput {
  company: SettingsCompanyInput!
  customerNumbersIncrementTemplate: String!
  customerNumbersLast: String!
  customerNumbersTemplate: String!
  defaultInvoiceDueDays: Int!
  defaultInvoiceFooterText: String!
  emailCompanyLogo: String!
  emailSubjectInvoices: String!
  emailSubjectOffers: String!
  emailSubjectReminder: String!
  emailSubjectWarning: String!
  emailTemplate: String!
  invoiceCompanyLogo: String!
  invoiceNumbersIncrementTemplate: String!
  invoiceNumbersLast: String!
  invoiceNumbersTemplate: String!
  offerNumbersIncrementTemplate: String!
  offerNumbersLast: String!
  offerNumbersTemplate: String!
  offerValidityDays: Int!
  replyTo: String!
  sendFrom: String!
}

type SettingsResult {
  company: SettingsResultCompany!
  customerNumbersIncrementTemplate: String!
  customerNumbersLast: String!
  customerNumbersTemplate: String!
  defaultInvoiceDueDays: Int!
  defaultInvoiceFooterText: String!
  emailCompanyLogo: String!
  emailSubjectInvoices: String!
  emailSubjectOffers: String!
  emailSubjectReminder: String!
  emailSubjectWarning: String!
  emailTemplate: String!
  invoiceCompanyLogo: String!
  invoiceNumbersIncrementTemplate: String!
  invoiceNumbersLast: String!
  invoiceNumbersTemplate: String!
  offerNumbersIncrementTemplate: String!
  offerNumbersLast: String!
  offerNumbersTemplate: String!
  offerValidityDays: Int!
  replyTo: String!
  sendFrom: String!
}

type SettingsResultCompany {
  bankAccountHolder: String!
  bankBic: String!
  bankIban: String!
  city: String!
  email: String!
  name: String!
  phone: String!
  street: String!
  taxId: String!
  vatId: String!
  web: String!
  zip: String!
}
