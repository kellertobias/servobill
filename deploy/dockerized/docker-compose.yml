version: '3.8'

# Dockerized deployment for Servobill
# Includes: Postgres, Queue Workers, Next.js App

services:
  # ---
  # Postgres connection URL for local development:
  # postgres://servobill:servobill@localhost:5432/servobill
  # Format: postgres://<user>:<password>@<host>:<port>/<database>
  # ---
  postgres:
    image: postgres:15
    restart: unless-stopped
    container_name: servobill-postgres
    environment:
      POSTGRES_USER: servobill
      POSTGRES_PASSWORD: servobill
      POSTGRES_DB: servobill
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # === Queue Workers ===
  queue-workers:
    build:
      context: ../..
      dockerfile: deploy/dockerized/BackgroundJobs.Dockerfile
    container_name: servobill-queue-workers
    environment:
      # Inter service communication/configuration
      POSTGRES_URL: postgres://servobill:servobill@postgres:5432/servobill
      ENDPOINT_EVENTBRIDGE: http://queue-workers:9326

      # Email related settings
      SMTP_HOST: please-set
      SMTP_PORT: please-set
      SMTP_USER: please-set
      SMTP_PASSWORD: please-set
      SMTP_FROM: please-set
      SMTP_FROM_NAME: please-set
    depends_on:
      - postgres
    working_dir: /app
    volumes:
      - s3-data:/data

  # === Next.js Application ===
  app:
    build:
      context: ../..
      dockerfile: deploy/dockerized/App.Dockerfile
    container_name: servobill-app
    environment:
      # Inter service communication/configuration
      POSTGRES_URL: postgres://servobill:servobill@postgres:5432/servobill
      ENDPOINT_EVENTBRIDGE: http://queue-workers:9326

      # Authentication related settings
      ALLOWED_EMAILS: please-set
      OAUTH_CLIENT_ID: please-set
      JWT_SECRET: please-set

    ports:
      - "3000:3000"
    depends_on:
      - postgres
    volumes:
      - s3-data:/data

volumes:
  postgres-data: {}
  s3-data: {} 